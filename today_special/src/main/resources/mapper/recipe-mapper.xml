<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RecipeDAO">
	<resultMap id="user" type="user">
		<id property="id" column="ID" />
		<result property="password" column="PASSWORD" />
		<result property="email" column="EMAIL" />
		<result property="nickname" column="NICKNAME" />
		<result property="profile" column="profile" jdbcType="BLOB"
			javaType="_byte[]" />
	</resultMap>
	<resultMap id="recipeList" type="recipe">
		<id property="recipeId" column="RECIPE_ID" />
		<result property="recipeTitle" column="RECIPE_TITLE" />
		<result property="recipeContent" column="RECIPE_CONTENT" />
		<result property="recipeSituation" column="RECIPE_SITUATION" />
		<result property="recipeIngredient" column="RECIPE_INGREDIENT" />
		<result property="recipeThumbnail" column="RECIPE_THUMBNAIL" />
		<result property="userId" column="USER_ID" />
		<result property="recipeDate" column="RECIPE_DATE" />
		<result property="bookmarkCount" column="BOOKMARK_COUNT" />
		<collection property="userVO" resultMap="user" />
	</resultMap>

	<!-- 레시피 등록 전 레시피 아이디 찾기 -->
	<select id="getMaxRecipeId" resultType="int">
		SELECT max(RECIPE_ID)
		FROM recipe
	</select>

	<!-- 레시피 등록 -->
	<insert id="insertRecipe" parameterType="recipe">
		INSERT INTO
		recipe(RECIPE_ID,RECIPE_TITLE,RECIPE_CONTENT,RECIPE_SITUATION,RECIPE_INGREDIENT,RECIPE_THUMBNAIL,USER_ID)
		VALUES(#{recipeId},#{recipeTitle},#{recipeContent},#{recipeSituation},#{recipeIngredient},#{recipeThumbnail},#{userId})
	</insert>

	<!-- 레시피 아이디로 레시피 겟 -->
	<select id="getRecipe" parameterType="int"
		resultMap="recipeList">
		SELECT *
		FROM recipe
		WHERE RECIPE_ID = #{recipeId}
	</select>

	<!-- 키워드로 레시피 검색 -->
	<select id="getKeywordRecipe" resultMap="recipeList">
		SELECT A.*,B.NICKNAME
		FROM recipe AS A, user AS B
		WHERE A.USER_ID=B.ID
		AND A.RECIPE_TITLE LIKE
		CONCAT('%',#{keyword},'%')
	</select>

	<!-- 상황별 레시피 검색 -->
	<select id="getSituationRecipe" parameterType="String"
		resultMap="recipeList">
		SELECT A.*,B.NICKNAME
		FROM recipe AS A, user AS B
		WHERE
		A.USER_ID=B.ID
		AND A.RECIPE_SITUATION =
		#{recipeSituation}
	</select>

	<!-- 재료별 레시피 검색 -->
	<select id="getIngredientRecipe" parameterType="String"
		resultMap="recipeList">
		SELECT A.*,B.NICKNAME
		FROM recipe AS A, user AS B
		WHERE
		A.USER_ID=B.ID
		AND A.RECIPE_INGREDIENT=
		#{recipeIngredient}
	</select>

	<!-- 일간 베스트 -->
	<select id="getTodayBest" resultMap="recipeList">
		SELECT *
		FROM recipe
		WHERE
		RECIPE_DATE > DATE_ADD(now(), INTERVAL -24 HOUR)
		ORDER BY
		BOOKMARK_COUNT DESC
		LIMIT 10;
	</select>

	<!-- 주간 베스트 -->
	<select id="getWeeklyBest" resultMap="recipeList">
		SELECT *
		FROM recipe
		WHERE
		RECIPE_DATE > DATE_ADD(now(), INTERVAL -7 DAY)
		ORDER BY BOOKMARK_COUNT
		DESC
		LIMIT 10;
	</select>

	<!-- 북마크 수 증가 -->
	<update id="upBookmarkCount" parameterType="recipe">
		UPDATE recipe
		SET
		BOOKMARK_COUNT=BOOKMARK_COUNT+1
		WHERE RECIPE_ID=#{recipeId}
	</update>

	<!-- 북마크 수 감소 -->
	<update id="downBookmarkCount" parameterType="recipe">
	<![CDATA[
		UPDATE recipe
		SET
		BOOKMARK_COUNT=BOOKMARK_COUNT-1
		WHERE RECIPE_ID=#{recipeId} AND ( BOOKMARK_COUNT = 1 OR BOOKMARK_COUNT > 1)
	]]>
	</update>

	<!-- 내가 쓴 글 -->
	<select id="getMyRecipeList" parameterType="String"
		resultMap="recipeList">
		SELECT *
		FROM recipe
		WHERE USER_ID=#{userId}
	</select>

	<!-- 레시피 삭제 -->
	<delete id="deleteRecipe" parameterType="recipe">
		DELETE FROM recipe
		WHERE
		RECIPE_ID =#{recipeId}
	</delete>
	
	<!-- 모든 레시피 ID 리턴 -->
	<select id="getAllRecipeId" resultMap="recipeList">
		SELECT recipe_id
		FROM recipe
	</select>
</mapper>